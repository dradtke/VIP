vip-plugin.txt	For Vim version 7.3.  Last change: 2011 Aug 5

			VIP Project Plugin for Vim

==============================================================================
CONTENTS						*vip* *vip-plugin*

	 1. Overview..............................|vip-overview|
	 2. Project File Syntax...................|vip-project-file|
		i.   .............................|vip-properties|
		ii.  .............................|vip-headers|
		iii. .............................|vip-example|
	 3. Commands..............................|vip-commands|
	 4. Functions.............................|vip-functions|
	 5. GUI Integration.......................|vip-gui|
	 6. Mimetype Installation.................|vip-mimetype-install|
	 7. License...............................|vip-license|


==============================================================================
1. Overview						*vip-overview*

The purpose of the VIP plugin is to support modular projects. Modern day IDEs
allow you to open a project by double-clicking on the project file, but until
now, this was impossible with Vim.

VIP does not come with a file browser; that type of functionality is left up
to plugins such as NERDTree, MiniBufExplorer, and Command-T. Instead, the
focus is on getting a project's configuration up and running with as little
effort as possible, such as setting the compiler and custom keymappings.

A project is defined via a specially-formatted project file, not unlike
freedesktop.org desktop files. The .vip extension is recommended for these
files.

==============================================================================
2. Project File Syntax				*vip-syntax* *vip-project-file*

The project file uses a syntax very similar to freedesktop.org desktop files.
Here is the start of an example file my-project.vip: >

    [Vim Project]
    Name=My Project
<

The first line is a header, which changes how the following lines are
interpreted. The "Vim Project" header _must_ be the first line of the file.
Everything after this header is formatted as <property>=<value> pairs.

							*vip-properties*
Supported Properties~

    * Name
    * Root
    * Compiler
    * Targets
    * Exec

Name: required
    Specifies the name of your project.

Root: optional
    Changes the root of the project. Defaults to the directory containing this
    file. When the project is opened, Vim will automatically cd to this
    directory.

Compiler: optional
    Specifies the compiler used to build this project. Must be compatible with
    the 'make' command.

Targets: optional
    A comma-separated list of non-default build targets, e.g. "compile,clean".
    The "Compiler" option must also be set for these to show up in the menu.

Exec: optional
    The system command to run this project.

							*vip-headers*
Additional Headers~

------------------------------------------------------------------------------
[In]

Everything following this header will be sourced as vimscript when the
project is opened. This example maps F11 and F12 to build and run the project,
respectively: >

    [In]
    nmap <F11> :call vip#Build()<cr>
    nmap <F12> :call vip#Exec()<cr>
<

------------------------------------------------------------------------------
[Out]

Everything following this header will be sourced as vimscript when the
project is closed. This example undoes the mappings created when the project
was opened: >

    [Out]
    nmap <F11> :echo "Sorry, can't compile. This project is now closed."
    nmap <F12> :echo "Sorry, can't execute. This project is now closed."
<

------------------------------------------------------------------------------
							*vip-example*
Full Example~

my-project.vip: >

    [Vim Project]
    Name=My Project
    Compiler=gcc
    Targets=compile,clean
    Exec=./my-proj
    
    [In]
    nmap <F11> :call vip#Build()<cr>
    nmap <F12> :call vip#Exec()<cr>

    [Out]
    nmap <F11> :echo "No project open."
    nmap <F12> :echo "No project open."
<

==============================================================================
3. Commands						*vip-commands*

|:OpenProject|		Opens a project
|:CloseProject|		Closes the current project
|:CreateProject|	Creates a project file in the current directory

							*:OpenProject*
:OpenProject [project]
		Opens a VIP project. If a project file was provided, that
		project is opened; otherwise, a browser window will open to
		select one.

							*:CloseProject*
:CloseProject
		Closes the current VIP project, if one is open.

							*:CreateProject*
:CreateProject
		Creates a new project file in the current directory. The
		directory's name is used as the project name, and you will be
		prompted to provide a name for the project file. After it's
		created, you can open up the new file and make additional
		changes to it, such as specifying a compiler and in-or-out
		scripts.

==============================================================================
4. Functions						*vip-functions*

vip#Open({filename})		Opens filename as a VIP project
vip#IsProjectOpen()		Returns 1 if a project is open, 0 otherwise
vip#CloseCurrentProject()	Closes the currently-open project
vip#CloseCurrentProjectDialog()	Opens a dialog requesting confirmation
				  before closing the current project

vip#Build()			Builds the current project. Equivalent to
				  using the command |:make!|. The project
				  property 'Compiler' must be defined for this
				  to work properly

vip#BuildTarget({target})	Builds the current project using target
				  {target}. (see vip#Build)

vip#Exec()			Runs the current project. The project property
				  'Exec' must be defined for this to work
				  properly

vip#ExecWithArgs({args})	Runs the current project with the provided
				  string passed in as its arguments (see
				  vip#Exec)

vip#ExecPromptArgs()		Prompts for arguments, then runs the program
				  using them (see vip#Exec)

vip#GetProjectProperty({prop})	Retrieves a property from the project dict

vip#GetProjectPropertyWithDefault({prop}, {default})
				Retrieves a property from the project dict,
				  using {default} if it doesn't exist

==============================================================================
5. GUI Integration					*vip-gui*

VIP is designed to work with a graphical version of Vim. You can open a
project file by going to 'File->Open VIP Project...', and once a project is
open, a new |Project| menu should appear that will provide menu items for
building and running it.

==============================================================================
6. Mimetype Installation				*vip-mimetype-install*

The real power of VIP comes when you can open up your project with a quick
double-click, but that lies outside the abilities of a simple Vim plugin. The
'extras' folder contains some tools to help you set up your system to do just
that.

Right now only Linux is supported. Read the installation instructions provided
in extras/linux to learn how to install the 'application/vim-project' mimetype
and set the default application.

==============================================================================
7. License						*vip-license*

Copyright (c) 2011, Damien Radtke

This software is released under the terms of the Beerware License. Feel free
to use it however you please, but if you run in to me someday, it would be
nice if you could buy me a beer.
 
==============================================================================
vim:tw=78:fo=tcq2:isk=!-~,^*,^\|,^\":ts=8:ft=help:norl:
